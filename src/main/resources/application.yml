spring:
  application:
    name: ecommerce_backend

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  # Default profile configuration
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true

storage:
  location: ${STORAGE_LOCATION}
  base-url: ${STORAGE_BASE_URL}
  cleanup-schedule: ${STORAGE_CLEANUP_SCHEDULE}
  secret-salt: ${STORAGE_SECRET_SALT}

server:
  port: 8080

---
# Development profile (for local container development)
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${DB_USERNAME:devuser}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  logging:
    level:
      root: INFO
      org.springframework: INFO
      com.rj.ecommerce_backend: DEBUG
      org.hibernate.SQL: DEBUG
  jwt:
    secret: ${JWT_SECRET}
    expirationMs: 900000  # 15 minutes
    refresh-token-expiration: 86400000  # 24 hours
  cleanup:
    cron: "0 0 * * * *"  # Run cleanup every hour
    batch-size: 1000

storage:
  location: ${DEV_STORAGE_PATH:/tmp/ecommerce/product-images}
  cleanup-schedule: "0 0 * * * *"  # Cleanup unused images hourly
  temp-dir: ${java.io.tmpdir}/ecommerce-uploads

---
# Local profile (for running application locally without containers)
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://localhost:${DB_PORT:3306}/${DB_NAME:ecommerce_dev}?createDatabaseIfNotExist=true
    username: ${DB_USERNAME:devuser}
    password: ${DB_PASSWORD:devpass}
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
storage:
  location: ${user.home}/ecommerce/product-images/local
  cleanup-schedule: "0 0 * * * *"

---
# CI profile (for GitHub Actions)
spring:
  config:
    activate:
      on-profile: ci
  datasource:
    url: jdbc:mysql://localhost:3306/testdb
    username: testuser
    password: testpass
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
storage:
  location: ${CI_STORAGE_PATH:/tmp/ecommerce/test-images}
  cleanup-enabled: false  # Disable cleanup for testing

---
# Production profile
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${PROD_DB_URL}
    username: ${PROD_DB_USERNAME}
    password: ${PROD_DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
  logging:
    level:
      root: ERROR
      org.springframework: WARN
  jwt:
    secret: ${JWT_SECRET}
    expirationMs: 900000  # 15 minutes
    refresh-token-expiration: 86400000  # 24 hours
  cleanup:
    cron: "0 0 * * * *"  # Run cleanup every hour
    batch-size: 1000

storage:
  location: ${PROD_STORAGE_PATH}
  base-url: ${CDN_BASE_URL:/images}  # Optional CDN configuration
  cleanup-schedule: "0 0 0 * * *"  # Daily cleanup at midnight
  cleanup-threshold-days: 7  # Remove unused images after 7 days