name: Spring Boot CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        env:
          SPRING_PROFILES_ACTIVE: test
          DB_HOST: localhost
          DB_PORT: 3306
          DB_NAME: ${{ secrets.MYSQL_DATABASE }}
          DB_USERNAME: ${{ secrets.MYSQL_USER }}
          DB_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: mvn -B package --file pom.xml

      - name: Run tests
        run: mvn test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/surefire-reports

#      - name: Build and analyze with SonarCloud
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: mvn verify sonar:sonar -Dsonar.projectKey=your-project-key -Dsonar.organization=your-org
#
      # Optional: Deploy to production
#      - name: Deploy to Production
#        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#        env:
#          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
#        run: |
#          echo "Add your deployment commands here"
#          # Example: Deploy to a server or cloud platform